@model List<Category>

    @{
    ViewData["Title"] = "Categories";
    }

    <div class="me-auto">
        <p><a href="#" role="button" data-bs-toggle="modal" class="btn btn-outline-primary" data-bs-target="#createCategoryModal">Add New Category</a></p>
    </div>

    @if (Model.Count == 0)
    {
    <div class="alert alert-warning text-center" role="alert">
        There are no categories !!
    </div>
    }
    else
    {
    <div class="protable">
        <div class="table-responsive">
            <div class="container my-4">
                <!-- Category Table -->
                <table class="table table-bordered table-hover">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>
                            <input class="txtSearch" type="text" name="txtSearch" placeholder="search by name" style="font-size: small; border: 1px solid #ced4da;"/>
                            Name
                        </th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody id="protbody"> <!-- Added ID here -->
                    @{
                    int sl = 1;
                    foreach (var item in Model)
                    {
                    <tr>
                        <td>@sl</td>
                        <td>@item.Name</td> <!-- Change from <th> to <td> -->
                        <td>
                            <a onclick="EditCategory('@item.Id')" class="btn btn-outline-secondary btn-sm" style="cursor: pointer;">Edit <i class="bi bi-pencil-square"></i></a>
                            <a onclick="DeleteCategory('@item.Id')" class="btn btn-outline-danger btn-sm ms-2" style="cursor: pointer;">Delete <i class="bi bi-trash"></i></a>
                        </td>
                    </tr>
                    sl++;
                    }
                    }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    }

    <!-- Create Category Modal -->
    <div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title fs-5">Add Category</h2>
                    <button type="button" class="btn-outline-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input id="txtName1" class="form-control form-control-sm" placeholder="Enter Name">
                    <input id="fileImage1" type="file" class="form-control form-control-sm mt-2" accept="image/*"/>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-sm btn-outline-primary" onclick="AddCategory()">Save</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Category Modal -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title fs-5">Edit Category</h2>
                    <button type="button" class="btn-outline-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input id="cId" type="hidden" />
                    <input id="txtName2" class="form-control form-control-sm" placeholder="Enter Name">
                    <input id="fileImage2" type="file" class="form-control form-control-sm mt-2" accept="image/*" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="UpdateCategory()">Save</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script type="text/javascript">
        $('.txtSearch').on('input', function () {
            let searchValue = $(this).val().toLowerCase();

            // Iterate through each row in the table
            $('#protbody tr').each(function () {
                // Adjust the index if necessary to match your table structure
                let categoryName = $(this).find('td:nth-child(2)').text().toLowerCase().trim();

                // Check if the search value matches the category name
                if (categoryName.includes(searchValue)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });


        function AddCategory() {
            var formData = new FormData();
            formData.append('name', $('#txtName1').val());
            var imageFile = $('#fileImage1')[0].files[0];
            if (imageFile) {
                formData.append('image', imageFile);
            }

            $.ajax({
                url: "/Category/Create",
                method: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (result) {
                    if (result.success) {
                        $('#createCategoryModal').modal('hide');
                        Swal.fire({
                            position: "top-end",
                            icon: "success",
                            title: "Your work has been saved",
                            showConfirmButton: false,
                            timer: 1500
                        });
                        setTimeout(function () {
                            window.location.reload();
                        }, 1500);
                    } else {
                        Swal.fire({
                            position: "top-end",
                            icon: "error",
                            title: result.message
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log(`Error: ${error}, Status: ${status}, Response: ${xhr.responseText}`);
                }
            });
        }

        function EditCategory(id) {
            $.ajax({
                type: "GET",
                url: "/Category/Edit?id=" + id,
                dataType: "json",
                success: function (result) {
                    $('#cId').val(result.id);
                    $('#txtName2').val(result.name);

                    if (result.image) {
                        $('#imgImage2').attr('src', '/Images/Category' + result.image).show();
                    } else {
                        $('#imgImage2').hide();
                    }

                    $('#editCategoryModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                }
            });
        }

        function UpdateCategory() {
            var formData = new FormData();
            formData.append('Id', $('#cId').val());
            formData.append('Name', $('#txtName2').val());
            var imageFile = $('#fileImage2')[0].files[0];
            if (imageFile) {
                formData.append('Image', imageFile);
            }

            $.ajax({
                url: "/Category/Edit",
                method: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (result) {
                    if (result.success) {
                        $('#editCategoryModal').modal('hide');
                        Swal.fire({
                            position: "top-end",
                            icon: "success",
                            title: result.message,
                            showConfirmButton: false,
                            timer: 1500
                        });
                        setTimeout(function () {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            position: "center",
                            icon: "error",
                            title: result.message,
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                }
            });
        }
        function DeleteCategory(categoryId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Category/Delete",
                        method: "POST",
                        data: { id: categoryId },
                        success: function (result) {
                            if (result.success) {
                                Swal.fire({
                                    position: "top-end",
                                    icon: "success",
                                    title: "Category has been deleted",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                setTimeout(function () {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    position: "top-end",
                                    icon: "error",
                                    title: result.message
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(`Error: ${error}, Status: ${status}, Response: ${xhr.responseText}`);
                        }
                    });
                }
            });
        }
        
    </script>
}