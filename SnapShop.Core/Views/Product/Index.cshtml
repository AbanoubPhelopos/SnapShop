@model List<Product>

@{
ViewData["Title"] = "Home";
}

<div class="d-flex">
    <div class="me-auto">
        <p><a href="#" role="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addProModal">Add New Product</a></p>
    </div>
    <div class="d-flex justify-content-center mb-3 position-relative">
        <input class="txtSearch form-control form-control-sm w-auto ps-5" type="text" name="txtSearch" placeholder="Name or Barcode" />
        <i class="bi bi-search position-absolute top-50 start-0 translate-middle-y ps-2" style="font-size: 1rem; color: #6c757d;"></i>
    </div>

</div>

@if (Model.Count == 0)
{
<div class="alert alert-warning text-center" role="alert">
    There are no products !!
</div>
}
else
{
<div class="protable">
    <div class="table-responsive">
        <table class="table table-bordered table-hover w-100">
            <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Barcode</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody id="protbody">
            @{
            int sl = 1;
            }
            @foreach (var item in Model)
            {
            <tr>
                <td>@sl</td>
                <td>@item.Name</td>
                <td>@item.Category?.Name</td>
                <td>@item.Price</td>
                <td>@item.Barcode</td>
                <td>
                    <a onclick="EditProduct('@item.Id')" class="btn btn-outline-secondary btn-sm" style="cursor: pointer;">Edit <i class="bi bi-pencil-square"></i></a>
                    <a onclick="DeleteProduct('@item.Id')" class="btn btn-outline-danger btn-sm ms-2" style="cursor: pointer;">Delete <i class="bi bi-trash"></i></a>
                </td>
            </tr>
            sl++;
            }
            </tbody>
        </table>
    </div>
</div>
}

<!-- Add Product Modal -->
<div class="modal fade" id="addProModal" tabindex="-1" aria-labelledby="addProModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProModalLabel">Add Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mx-3">
                    <form id="addProductForm" method="post" enctype="multipart/form-data" action="/Product/Add">
                        <div class="row mb-2">
                            <label for="txtName1" class="col-sm-3 col-form-label">Name</label>
                            <div class="col-sm-9">
                                <input id="txtName1" name="Name" class="form-control form-control-sm" required>
                                <div class="invalid-feedback">This Name field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="ddlCategory1" class="col-sm-3 col-form-label">Category</label>
                            <div class="col-sm-9">
                                <select id="ddlCategory1" name="Category" asp-items="@ViewBag.Categories" class="form-select form-select-sm" required>
                                    <option value="" disabled selected>--Select Category--</option>
                                </select>
                                <div class="invalid-feedback">This Category field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtQuantity1" class="col-sm-3 col-form-label">Quantity</label>
                            <div class="col-sm-9">
                                <input id="txtQuantity1" type="number" name="Quantity" class="form-control form-control-sm" required>
                                <div class="invalid-feedback">This Quantity field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtImage1" class="col-sm-3 col-form-label">Image</label>
                            <div class="col-sm-9">
                                <input id="txtImage1" name="Image" class="form-control form-control-sm" type="file"/>
                                <div class="invalid-feedback">This Image field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtDescription1" class="col-sm-3 col-form-label">Description</label>
                            <div class="col-sm-9">
                                <textarea id="txtDescription1" name="Description" class="form-control form-control-sm"></textarea>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtPrice1" class="col-sm-3 col-form-label">Price</label>
                            <div class="col-sm-9">
                                <input id="txtPrice1" type="number" name="Price" class="form-control form-control-sm" required>
                                <div class="invalid-feedback">This Price field is required.</div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-sm btn-outline-primary" onclick="AddProduct()">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Product Modal -->
<div class="modal fade" id="editProModal" tabindex="-1" aria-labelledby="editProModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mx-3">
                    <form id="editProductForm" method="post" enctype="multipart/form-data" action="/Product/Edit">
                        <input type="hidden" id="pid" name="Id" />
                        <div class="row mb-2">
                            <label for="txtName2" class="col-sm-3 col-form-label">Name</label>
                            <div class="col-sm-9">
                                <input id="txtName2" name="Name" class="form-control form-control-sm" required>
                                <div class="invalid-feedback">This Name field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="ddlCategory2" class="col-sm-3 col-form-label">Category</label>
                            <div class="col-sm-9">
                                <select id="ddlCategory2" name="Category" asp-items="@ViewBag.Categories" class="form-select form-select-sm" required>
                                    <option value="" disabled selected>--Select Category--</option>
                                    @foreach (var item in ViewBag.Categories)
                                    {
                                    <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <div class="invalid-feedback">This Category field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtQuantity2" class="col-sm-3 col-form-label">Quantity</label>
                            <div class="col-sm-9">
                                <input id="txtQuantity2" type="number" name="Quantity" class="form-control form-control-sm" required>
                                <div class="invalid-feedback">This Quantity field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtImage2" class="col-sm-3 col-form-label">Image</label>
                            <div class="col-sm-9">
                                <input id="txtImage2" name="Image" class="form-control form-control-sm" type="file" />
                                <img id="imgImage2" alt="#" width="90" height="50" style="display:none;">
                                <div class="invalid-feedback">This Image field is required.</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtDescription2" class="col-sm-3 col-form-label">Description</label>
                            <div class="col-sm-9">
                                <textarea id="txtDescription2" name="Description" class="form-control form-control-sm"></textarea>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label for="txtPrice2" class="col-sm-3 col-form-label">Price</label>
                            <div class="col-sm-9">
                                <input id="txtPrice2" type="number" name="Price" class="form-control form-control-sm" required>
                                <div class="invalid-feedback">This Price field is required.</div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-sm btn-outline-primary" onclick="UpdateProduct()">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            @if (TempData["Toast"] != null)
            {
                @Html.Raw(TempData["Toast"])
            }

            $('.show-image').click(function (e) {
                e.preventDefault();
                var imageSrc = $(this).data('imagePath');
                $('#modalImage').attr('src', '/Images/Products' + imageSrc);
                $('#showImageModal').modal('show');
            });

            // Search functionality
            $('.txtSearch').on('input', function () {
                let searchValue = $(this).val().toLowerCase();

                // Iterate through each row in the table
                $('#protbody tr').each(function () {
                    let productName = $(this).find('td:nth-child(2)').text().toLowerCase();
                    let productBarcode = $(this).find('td:nth-child(5)').text().toLowerCase();

                    if (productName.includes(searchValue) || productBarcode.includes(searchValue)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

        });

        function validateFields(fields) {
            let isValid = true;
            fields.forEach(function (field) {
                if (!$(field).val()) {
                    $(field).addClass('is-invalid');
                    isValid = false;
                } else {
                    $(field).removeClass('is-invalid');
                }
            });
            return isValid;
        }

        function showAlert(icon, title) {
            Swal.fire({
                position: "top-end",
                icon: icon,
                title: title,
                showConfirmButton: false,
                timer: 1500
            });
        }

        function handleAjaxError(xhr, status, error) {
            console.error("Error:", error);
            showAlert("error", error);
        }

        function AddProduct() {
            const fieldsToValidate = ['#txtName1', '#txtQuantity1', '#ddlCategory1', '#txtImage1', '#txtPrice1'];
            if (!validateFields(fieldsToValidate)) {
                showAlert("error", "Please fill the required fields");
                return;
            }

            var formData = new FormData();
            formData.append('Name', $('#txtName1').val());
            formData.append('CategoryId', $('#ddlCategory1').val());
            formData.append('Description', $('#txtDescription1').val());
            formData.append('Price', $('#txtPrice1').val());
            formData.append('Quantity', $('#txtQuantity1').val());

            var imgInput = $('#txtImage1').get(0).files?.[0];
            
            console.log(imgInput);
            
            if (imgInput) {
                formData.append('Image', imgInput);
            }

            $.ajax({
                url: "/Product/Create",
                method: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (result) {
                    if (result.success) {
                        $('#addProModal').modal('hide');
                        showAlert("success", result.message);
                        setTimeout(function () {
                            window.location.reload();
                        }, 1500);
                    } else {
                        showAlert("error", result.message);
                    }
                },
                error: handleAjaxError
            });
        }

        function EditProduct(id) {
            $.ajax({
                type: "GET",
                url: "/Product/Edit?id=" + id,
                dataType: "json",
                success: function (result) {
                    $('#pid').val(result.id);
                    $('#txtName2').val(result.name);
                    $('#ddlCategory2').val(result.categoryId);
                    $('#txtDescription2').val(result.description);
                    $('#txtPrice2').val(result.price);
                    $('#txtQuantity2').val(result.quantity);

                    if (result.image) {
                        $('#imgImage2').attr('src', '/Images/Products' + result.image).show();
                    } else {
                        $('#imgImage2').hide();
                    }
                    $('#editProModal').modal('show');
                },
                error: handleAjaxError
            });
        }

        function UpdateProduct() {
            const fieldsToValidate = ['#txtName2', '#txtQuantity2', '#ddlCategory2', '#txtPrice2'];
            if (!validateFields(fieldsToValidate)) {
                showAlert("error", "Please fill the required fields");
                return;
            }

            var formData = new FormData();
            formData.append('Id', $('#pid').val());
            formData.append('Name', $('#txtName2').val());
            formData.append('CategoryId', $('#ddlCategory2').val());
            formData.append('Description', $('#txtDescription2').val());
            formData.append('Price', $('#txtPrice2').val());
            formData.append('Quantity', $('#txtQuantity2').val());

            var imgInput = $('#txtImage2').get(0).files;
            if (imgInput) {
                formData.append('Image', imgInput);
            }

            $.ajax({
                url: "/Product/Edit",
                method: "POST",
                data: formData,
                dataType: "json",
                processData: false,
                contentType: false,
                success: function (result) {
                    if (result.success) {
                        $('#editProModal').modal('hide');
                        showAlert("success", result.message);
                        setTimeout(function () {
                            window.location.reload();
                        }, 1500);
                    } else {
                        showAlert("error", result.message);
                    }
                },
                error: handleAjaxError
            });
        }

        function DeleteProduct(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Product/Delete",
                        method: "POST",
                        data: { id: productId },
                        success: function (result) {
                            if (result.success) {
                                Swal.fire({
                                    position: "top-end",
                                    icon: "success",
                                    title: "Product has been deleted",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                setTimeout(function () {
                                    window.location.reload();
                                }, 1500); // Added delay to match the timer
                            } else {
                                Swal.fire({
                                    position: "top-end",
                                    icon: "error",
                                    title: result.message
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                position: "top-end",
                                icon: "error",
                                title: "An error occurred",
                                text: `Error: ${error}, Status: ${status}, Response: ${xhr.responseText}`
                            });
                        }
                    });
                }
            });
        }
    </script>
}